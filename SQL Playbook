# This is a file for baseline SQL codes needed to get started and working on a databas project

#To begin with, the table creation command requires the following details −

#Name of the table
#Name of the fields
#Definitions for each field
#Syntax
#Here is a generic SQL syntax to create a MySQL table −

CREATE TABLE table_name (column_name column_type);

#Now, we will create the following table in the TUTORIALS database.

#######################################################################################################################################

create table tutorials_tbl(
   tutorial_id INT NOT NULL AUTO_INCREMENT,
   tutorial_title VARCHAR(100) NOT NULL,
   tutorial_author VARCHAR(40) NOT NULL,
   submission_date DATE,
   PRIMARY KEY ( tutorial_id )
);

#######################################################################################################################################

Here, a few items need explanation −

Field Attribute NOT NULL is being used because we do not want this field to be NULL. So, if a user will try to create a record with a NULL value, then MySQL will raise an error.

Field Attribute AUTO_INCREMENT tells MySQL to go ahead and add the next available number to the id field.

Keyword PRIMARY KEY is used to define a column as a primary key. You can use multiple columns separated by a comma to define a primary key.

#######################################################################################################################################

USE tutorials_tbl;

SELECT
   field_1,
   field_2,
   field_3,
FROM table_name


--WHERE field_3 > 100
--WHERE field_2 = "field_2_name"   

--ORDER BY submission_date

--AND, OR, NOT operators

#######################################################################################################################################

--Using the NOT operator
SELECT * 
FROM table_name
WHERE field_1 NOT IN ("name1", "name3", "name6")

--Using the LIKE operator
SELECT * 
FROM table_name
WHERE field_1 LIKE "%SON% OR 
      field_1 LIKE "%RIC%"



#######################################################################################################################################
-- REGEXP (regular expression)
SELECT *
FROM table_name

-- field_1 starts if AB or contains CD
--WHERE field_1 REGEXP "^AB|CD"

-- field_1 contains x and followed by yz
--WHERE field_1 REGEXP "x[yz]"



